version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "009160053341"  # Your AWS Account ID
    AWS_DEFAULT_REGION: "us-east-1"  # Change to your AWS region
    IMAGE_REPO_NAME: "webapp"  # Your ECR repository name
    IMAGE_TAG: "latest"  # Tag for the image
    CONTAINER_NAME: "nodejs-container"  # The ECS task definition container name

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - export REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - echo "ECR Repository URI: $REPOSITORY_URI"
      - export IMAGE_TAG=${IMAGE_TAG:-latest}  # Ensure IMAGE_TAG is not empty

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image to Amazon ECR...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$REPOSITORY_URI:$IMAGE_TAG" > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
  discard-paths: yes
